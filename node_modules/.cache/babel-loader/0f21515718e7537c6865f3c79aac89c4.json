{"ast":null,"code":"var _jsxFileName = \"/home/andre/Projetos/sd-020/frontend/sd-020-b-project-trybewallet/src/components/Table/Table.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Table extends React.Component {\n  /* deleteExpense = () => {\n    const { expenses } = this.props;\n  } */\n  render() {\n    const {\n      expenses\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, \"Descri\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, \"Tag\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, \"M\\xE9todo de pagamento\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, \"Valor\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, \"Moeda\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, \"C\\xE2mbio utilizado\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, \"Valor convertido\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, \"Moeda de convers\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, \"Editar/Excluir\")), expenses.map(_ref => {\n      let {\n        id,\n        tag,\n        value,\n        description,\n        currency,\n        method,\n        exchangeRates\n      } = _ref;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, description), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, tag), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, method), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, (+value).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, exchangeRates[currency].name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, (+exchangeRates[currency].ask).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, (value * exchangeRates[currency].ask).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, \"Real\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      }, \"Editar\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"delete-btn\",\n        onClick: deleteExpense,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, \"Excluir\")));\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  expenses: state.wallet.expenses\n});\n\nTable.propTypes = {\n  expenses: PropTypes.arrayOf().isRequired\n};\nexport default connect(mapStateToProps, null)(Table);","map":{"version":3,"sources":["/home/andre/Projetos/sd-020/frontend/sd-020-b-project-trybewallet/src/components/Table/Table.jsx"],"names":["React","connect","PropTypes","Table","Component","render","expenses","props","map","id","tag","value","description","currency","method","exchangeRates","toFixed","name","ask","deleteExpense","mapStateToProps","state","wallet","propTypes","arrayOf","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAClC;AACF;AACA;AAEEC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATF,CADF,EAaID,QAAQ,CAACE,GAAT,CAAa;AAAA,UAAC;AACdC,QAAAA,EADc;AACVC,QAAAA,GADU;AACLC,QAAAA,KADK;AACEC,QAAAA,WADF;AACeC,QAAAA,QADf;AACyBC,QAAAA,MADzB;AACiCC,QAAAA;AADjC,OAAD;AAAA,0BAGb;AAAI,QAAA,GAAG,EAAGN,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIG,WADJ,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIF,GADJ,CAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACII,MADJ,CAPF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,CAAC,CAACH,KAAF,EAASK,OAAT,CAAiB,CAAjB,CADJ,CAVF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACID,aAAa,CAACF,QAAD,CAAb,CAAwBI,IAD5B,CAbF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,CAAC,CAACF,aAAa,CAACF,QAAD,CAAb,CAAwBK,GAA1B,EAA+BF,OAA/B,CAAuC,CAAvC,CADJ,CAhBF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,CAACL,KAAK,GAAGI,aAAa,CAACF,QAAD,CAAb,CAAwBK,GAAjC,EAAsCF,OAAtC,CAA8C,CAA9C,CADJ,CAnBF,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,IAAI,EAAC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AACE,QAAA,IAAI,EAAC,QADP;AAEE,uBAAY,YAFd;AAGE,QAAA,OAAO,EAAGG,aAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,CAzBF,CAHa;AAAA,KAAb,CAbJ,CADF;AA6DD;;AApEiC;;AAuEpC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCf,EAAAA,QAAQ,EAAEe,KAAK,CAACC,MAAN,CAAahB;AADW,CAAZ,CAAxB;;AAIAH,KAAK,CAACoB,SAAN,GAAkB;AAChBjB,EAAAA,QAAQ,EAAEJ,SAAS,CAACsB,OAAV,GAAoBC;AADd,CAAlB;AAIA,eAAexB,OAAO,CAACmB,eAAD,EAAkB,IAAlB,CAAP,CAA+BjB,KAA/B,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Table extends React.Component {\n  /* deleteExpense = () => {\n    const { expenses } = this.props;\n  } */\n\n  render() {\n    const { expenses } = this.props;\n    return (\n      <div>\n        <tr>\n          <th>Descrição</th>\n          <th>Tag</th>\n          <th>Método de pagamento</th>\n          <th>Valor</th>\n          <th>Moeda</th>\n          <th>Câmbio utilizado</th>\n          <th>Valor convertido</th>\n          <th>Moeda de conversão</th>\n          <th>Editar/Excluir</th>\n        </tr>\n\n        { expenses.map(({\n          id, tag, value, description, currency, method, exchangeRates,\n        }) => (\n          <tr key={ id }>\n            <td>\n              { description }\n            </td>\n            <td>\n              { tag }\n            </td>\n            <td>\n              { method }\n            </td>\n            <td>\n              { (+value).toFixed(2) }\n            </td>\n            <td>\n              { exchangeRates[currency].name }\n            </td>\n            <td>\n              { (+exchangeRates[currency].ask).toFixed(2) }\n            </td>\n            <td>\n              { (value * exchangeRates[currency].ask).toFixed(2) }\n            </td>\n            <td>\n              Real\n            </td>\n            <td>\n              <button\n                type=\"button\"\n              >\n                Editar\n              </button>\n              <button\n                type=\"button\"\n                data-testid=\"delete-btn\"\n                onClick={ deleteExpense }\n              >\n                Excluir\n              </button>\n            </td>\n          </tr>\n        ))}\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nTable.propTypes = {\n  expenses: PropTypes.arrayOf().isRequired,\n};\n\nexport default connect(mapStateToProps, null)(Table);\n"]},"metadata":{},"sourceType":"module"}