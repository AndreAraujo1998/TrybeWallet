{"ast":null,"code":"var _jsxFileName = \"/home/andre/Projetos/sd-020/frontend/sd-020-b-project-trybewallet/src/components/Form/Form.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Proptypes from 'prop-types';\n\nclass Form extends React.Component {\n  render() {\n    const {\n      currency,\n      description,\n      value\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"valueInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"value-input\",\n      name: \"value\" // onChange={ handleChange }\n      ,\n      type: \"number\",\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"description-input\",\n      name: \"description\" // onChange={ handleChange }\n      ,\n      type: \"text\",\n      value: description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"coin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, \"Moeda:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      value: currency // onChange={ handleChange }\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, currencies.map(element => /*#__PURE__*/React.createElement(\"option\", {\n      key: element,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, currency)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"M\\xE9todo de pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      value: method,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"currencies\")));\n  }\n\n}\n\nForm.propTypes = {\n  currencies: Proptypes.arrayOf(Proptypes.any)\n}.isRequired;\nexport default connect()(Form);","map":{"version":3,"sources":["/home/andre/Projetos/sd-020/frontend/sd-020-b-project-trybewallet/src/components/Form/Form.jsx"],"names":["React","connect","Proptypes","Form","Component","render","currency","description","value","props","currencies","map","element","method","propTypes","arrayOf","any","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AACjCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,WAAZ;AAAyBC,MAAAA;AAAzB,QAAmC,KAAKC,KAA9C;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEE;AACE,qBAAY,aADd;AAEE,MAAA,IAAI,EAAC,OAFP,CAGE;AAHF;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,KAAK,EAAGD,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAYE;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAEE;AACE,qBAAY,mBADd;AAEE,MAAA,IAAI,EAAC,aAFP,CAGE;AAHF;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,KAAK,EAAGD,WALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAZF,eAuBE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEE;AACE,qBAAY,gBADd;AAEE,MAAA,KAAK,EAAGD,QAFV,CAGE;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGI,UAAU,CAACC,GAAX,CAAgBC,OAAD,iBACd;AAAQ,MAAA,GAAG,EAAGA,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBN,QAAzB,CADD,CALH,CAFF,CAvBF,eAoCE;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEE;AACE,qBAAY,cADd;AAEE,MAAA,KAAK,EAAGO,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CApCF,CADF;AAgDD;;AAnDgC;;AAsDnCV,IAAI,CAACW,SAAL,GAAiB;AACfJ,EAAAA,UAAU,EAAER,SAAS,CAACa,OAAV,CAAkBb,SAAS,CAACc,GAA5B;AADG,EAGfC,UAHF;AAKA,eAAehB,OAAO,GAAGE,IAAH,CAAtB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Proptypes from 'prop-types';\n\nclass Form extends React.Component {\n  render() {\n    const { currency, description, value } = this.props;\n    return (\n      <form>\n        <label htmlFor=\"valueInput\">\n          Valor:\n          <input\n            data-testid=\"value-input\"\n            name=\"value\"\n            // onChange={ handleChange }\n            type=\"number\"\n            value={ value }\n          />\n        </label>\n\n        <label htmlFor=\"description\">\n          Descrição:\n          <input\n            data-testid=\"description-input\"\n            name=\"description\"\n            // onChange={ handleChange }\n            type=\"text\"\n            value={ description }\n          />\n        </label>\n\n        <label htmlFor=\"coin\">\n          Moeda:\n          <select\n            data-testid=\"currency-input\"\n            value={ currency }\n            // onChange={ handleChange }\n          >\n            {currencies.map((element) => (\n              <option key={ element }>{currency}</option>\n            ))}\n          </select>\n        </label>\n\n        <label htmlFor=\"method\">\n          Método de pagamento:\n          <select\n            data-testid=\"method-input\"\n            value={ method }\n          >\n            currencies\n          </select>\n        </label>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  currencies: Proptypes.arrayOf(Proptypes.any),\n\n}.isRequired;\n\nexport default connect()(Form);\n"]},"metadata":{},"sourceType":"module"}