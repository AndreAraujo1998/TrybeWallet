{"ast":null,"code":"var _jsxFileName = \"/home/andre/Projetos/sd-020/frontend/sd-020-b-project-trybewallet/src/components/Form/Form.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Proptypes from 'prop-types';\nimport { setExpense } from '../../actions';\nconst initialState = {\n  value: '',\n  description: '',\n  currency: 'USD',\n  method: 'Dinheiro',\n  tag: 'Alimentação'\n};\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleClick = () => {\n      const {\n        value,\n        description,\n        currency,\n        method,\n        tag\n      } = this.state;\n      const {\n        expenses,\n        addExpenses\n      } = this.props;\n      const id = 1;\n      const expense = {\n        id,\n        value,\n        description,\n        currency,\n        method,\n        tag\n      };\n      addExpenses(expense);\n      this.setState(initialState);\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      tag,\n      currency,\n      description,\n      value,\n      method\n    } = this.state;\n    const {\n      currencies\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"valueInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"value-input\",\n      name: \"value\",\n      onChange: this.handleChange,\n      type: \"number\",\n      value: value,\n      id: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"description-input\",\n      name: \"description\",\n      onChange: this.handleChange,\n      type: \"text\",\n      value: description,\n      id: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"coin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"Moeda:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      value: currency,\n      onChange: this.handleChange,\n      name: \"coin\",\n      id: \"coin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, currencies.map(element => /*#__PURE__*/React.createElement(\"option\", {\n      key: element,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, element)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, \"M\\xE9todo de pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      value: method,\n      onChange: this.handleChange,\n      name: \"method\",\n      id: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Dinheiro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tagInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, \"Categoria\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tagInput\",\n      name: \"tagInput\",\n      onChange: this.handleChange,\n      value: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Alimenta\\xE7\\xE3o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Lazer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Trabalho\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Transporte\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Sa\\xFAde\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, \"Sa\\xFAde\"))), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"despesa\",\n      type: \"button\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, \"Adicionar despesa\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currencies: state.wallet.currencies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addExpenses: state => {\n    dispatch(setExpense(state));\n  }\n});\n\nForm.propTypes = {\n  currencies: Proptypes.arrayOf(Proptypes.any)\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","map":{"version":3,"sources":["/home/andre/Projetos/sd-020/frontend/sd-020-b-project-trybewallet/src/components/Form/Form.jsx"],"names":["React","connect","Proptypes","setExpense","initialState","value","description","currency","method","tag","Form","Component","constructor","handleChange","target","name","setState","handleClick","state","expenses","addExpenses","props","id","expense","render","currencies","map","element","mapStateToProps","wallet","mapDispatchToProps","dispatch","propTypes","arrayOf","any","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Proptypes from 'prop-types';\nimport { setExpense } from '../../actions';\n\nconst initialState = {\n  value: '',\n  description: '',\n  currency: 'USD',\n  method: 'Dinheiro',\n  tag: 'Alimentação',\n};\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleClick = () => {\n    const { value, description, currency, method, tag } = this.state;\n    const { expenses, addExpenses } = this.props;\n    const id = 1;\n    const expense = {\n      id,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n    };\n    addExpenses(expense);\n    this.setState(initialState);\n  };\n\n  render() {\n    const {\n      tag,\n      currency,\n      description,\n      value,\n      method,\n    } = this.state;\n    const {\n      currencies,\n    } = this.props;\n    return (\n      <form>\n        <label htmlFor=\"valueInput\">\n          Valor:\n          <input\n            data-testid=\"value-input\"\n            name=\"value\"\n            onChange={ this.handleChange }\n            type=\"number\"\n            value={ value }\n            id=\"value\"\n          />\n        </label>\n\n        <label htmlFor=\"description\">\n          Descrição:\n          <input\n            data-testid=\"description-input\"\n            name=\"description\"\n            onChange={ this.handleChange }\n            type=\"text\"\n            value={ description }\n            id=\"description\"\n          />\n        </label>\n\n        <label htmlFor=\"coin\">\n          Moeda:\n          <select\n            data-testid=\"currency-input\"\n            value={ currency }\n            onChange={ this.handleChange }\n            name=\"coin\"\n            id=\"coin\"\n          >\n            {currencies.map((element) => (\n              <option key={ element }>{element}</option>\n            ))}\n          </select>\n        </label>\n\n        <label htmlFor=\"method\">\n          Método de pagamento:\n          <select\n            data-testid=\"method-input\"\n            value={ method }\n            onChange={ this.handleChange }\n            name=\"method\"\n            id=\"method\"\n          >\n            <option value=\"Dinheiro\">Dinheiro</option>\n            <option>Cartão de crédito</option>\n            <option>Cartão de débito</option>\n          </select>\n        </label>\n\n        <label htmlFor=\"tagInput\">\n          Categoria\n          <select\n            data-testid=\"tagInput\"\n            name=\"tagInput\"\n            onChange={ this.handleChange }\n            value={ tag }\n          >\n            <option value=\"Alimentação\">Alimentação</option>\n            <option value=\"Lazer\">Lazer</option>\n            <option value=\"Trabalho\">Trabalho</option>\n            <option value=\"Transporte\">Transporte</option>\n            <option value=\"Saúde\">Saúde</option>\n          </select>\n        </label>\n        <button\n          id=\"despesa\"\n          type=\"button\"\n          onClick={ this.handleClick }\n        >\n          Adicionar despesa\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addExpenses: (state) => {\n    dispatch(setExpense(state));\n  },\n});\n\nForm.propTypes = {\n  currencies: Proptypes.arrayOf(Proptypes.any),\n\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n"]},"metadata":{},"sourceType":"module"}