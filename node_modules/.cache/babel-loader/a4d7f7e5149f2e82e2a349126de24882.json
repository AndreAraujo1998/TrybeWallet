{"ast":null,"code":"var _jsxFileName = \"/home/andre/Projetos/sd-020/frontend/sd-020-b-project-trybewallet/src/components/Form/Form.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Proptypes from 'prop-types';\nimport { saveExpensesAction } from '../../actions';\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      value: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentacao',\n      description: ''\n    };\n  }\n\n  render() {\n    const {\n      category,\n      currencies,\n      currency,\n      description,\n      value,\n      method\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"valueInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"value-input\",\n      name: \"value\",\n      onChange: event => this.setState({\n        value: event.target.value\n      }),\n      type: \"number\",\n      value: value,\n      id: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"description-input\",\n      name: \"description\" // onChange={ handleChange }\n      ,\n      type: \"text\",\n      value: description,\n      id: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"coin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Moeda:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      value: currency // onChange={ handleChange }\n      ,\n      name: \"coin\",\n      id: \"coin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, currencies.map(element => /*#__PURE__*/React.createElement(\"option\", {\n      key: element,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, element)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"M\\xE9todo de pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      value: method // onChange={ this.handleChange }\n      ,\n      name: \"method\",\n      id: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \"Categoria\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      name: \"category\" // onChange={ handleChange }\n      ,\n      value: category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, \"Sa\\xFAde\"))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      name: \"addExpense\",\n      onClick: props => this.props.saveExpensesAction({\n        expenses: []\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, \"Adicionar despesa\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  saveExpensesAction: information => dispatch(saveExpensesAction(information))\n});\n\nForm.propTypes = {\n  currencies: Proptypes.arrayOf(Proptypes.any)\n}.isRequired;\nexport default connect(null, mapDispatchToProps)(Form);","map":{"version":3,"sources":["/home/andre/Projetos/sd-020/frontend/sd-020-b-project-trybewallet/src/components/Form/Form.jsx"],"names":["React","connect","Proptypes","saveExpensesAction","Form","Component","constructor","handleChange","target","name","value","setState","state","currency","method","tag","description","render","category","currencies","props","event","map","element","expenses","mapDispatchToProps","dispatch","information","propTypes","arrayOf","any","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Proptypes from 'prop-types';\nimport { saveExpensesAction } from '../../actions';\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentacao',\n      description: '',\n    };\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n  render() {\n    const {\n      category,\n      currencies,\n      currency,\n      description,\n      value,\n      method,\n    } = this.props;\n    return (\n      <form>\n        <label htmlFor=\"valueInput\">\n          Valor:\n          <input\n            data-testid=\"value-input\"\n            name=\"value\"\n            onChange={ (event) => this.setState({ value: event.target.value })}\n            type=\"number\"\n            value={ value }\n            id=\"value\"\n          />\n        </label>\n\n        <label htmlFor=\"description\">\n          Descrição:\n          <input\n            data-testid=\"description-input\"\n            name=\"description\"\n            // onChange={ handleChange }\n            type=\"text\"\n            value={ description }\n            id=\"description\"\n          />\n        </label>\n\n        <label htmlFor=\"coin\">\n          Moeda:\n          <select\n            data-testid=\"currency-input\"\n            value={ currency }\n            // onChange={ handleChange }\n            name=\"coin\"\n            id=\"coin\"\n          >\n            {currencies.map((element) => (\n              <option key={ element }>{element}</option>\n            ))}\n          </select>\n        </label>\n\n        <label htmlFor=\"method\">\n          Método de pagamento:\n          <select\n            data-testid=\"method-input\"\n            value={ method }\n            // onChange={ this.handleChange }\n            name=\"method\"\n            id=\"method\"\n          >\n            <option>Dinheiro</option>\n            <option>Cartão de crédito</option>\n            <option>Cartão de débito</option>\n          </select>\n        </label>\n\n        <label htmlFor=\"category\">\n          Categoria\n          <select\n            data-testid=\"tag-input\"\n            name=\"category\"\n            // onChange={ handleChange }\n            value={ category }\n          >\n            <option>Alimentação</option>\n            <option>Lazer</option>\n            <option>Trabalho</option>\n            <option>Transporte</option>\n            <option>Saúde</option>\n          </select>\n        </label>\n\n        <button\n          type=\"button\"\n          name=\"addExpense\"\n          onClick={ (props) => this.props.saveExpensesAction({\n            expenses: [],\n          }) }\n        >\n          Adicionar despesa\n        </button>\n\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveExpensesAction: (information) => dispatch(saveExpensesAction(information)),\n});\n\nForm.propTypes = {\n  currencies: Proptypes.arrayOf(Proptypes.any),\n\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(Form);\n"]},"metadata":{},"sourceType":"module"}